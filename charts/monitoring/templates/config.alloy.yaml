apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy-config
  namespace: monitoring
data:
  config.alloy: |
    discovery.kubernetes "node" {
      role = "node"
    }

    prometheus.scrape "node" {
      scrape_interval = "15s"
      targets    = discovery.kubernetes.node.targets
      forward_to = [prometheus.remote_write.default.receiver]
    }

    discovery.kubernetes "pod" {
      role = "pod"
    }

    prometheus.scrape "pod" {
      scrape_interval = "15s"
      targets    = discovery.kubernetes.pod.targets
      forward_to = [prometheus.remote_write.default.receiver]
    }

    discovery.kubernetes "service" {
      role = "service"
    }

    prometheus.scrape "service" {
      scrape_interval = "15s"
      targets    = discovery.kubernetes.service.targets
      forward_to = [prometheus.remote_write.default.receiver]
    }

    // otel receiver -> batch processor -> exporter -> endpoint
    otelcol.receiver.otlp "default" {
      grpc {
        endpoint = "0.0.0.0:4317"
      }

      http {
        endpoint = "0.0.0.0:4318"
      }

      output {
          metrics = [otelcol.processor.batch.default.input]
          logs    = [otelcol.processor.batch.default.input]
          traces  = [otelcol.processor.batch.default.input]
      }
    }

    otelcol.processor.batch "default" {
      output {
        metrics = [otelcol.exporter.prometheus.default.input]
        logs    = [otelcol.exporter.loki.default.input]
        traces  = [otelcol.exporter.otlp.default.input]
      }
    }

    otelcol.exporter.prometheus "default" {
      forward_to = [prometheus.remote_write.default.receiver]
    }

    otelcol.exporter.loki "default" {
      forward_to = [loki.write.default.receiver]
    }

    // OTEL Endpoints
    prometheus.remote_write "default" {
      endpoint {
        url = "http://grafana-kube-prometheus-st-prometheus.svc:9090/api/v1/write"
      }
    }

    loki.write "default" {
      endpoint {
        url = "http://grafana-loki.monitoring.svc:3100/loki/api/v1/push"
      }
    }

    otelcol.exporter.otlp "default" {
      client {
          endpoint = "grafana-tempo.monitoring.svc:4317"
          tls {
              insecure = true
          }
        }
    }
