loki:
  loki:
    commonConfig:
      replication_factor: 1
    schemaConfig:
      configs:
        - from: "2024-04-01"
          store: tsdb
          object_store: s3
          schema: v13
          index:
            prefix: loki_index_
            period: 24h
    pattern_ingester:
      enabled: true
    limits_config:
      retention_period: 168h
    ruler:
      enable_api: true
    compactor:
      retention_enabled: true
      delete_request_store: s3
  minio:
    enabled: true
  deploymentMode: SingleBinary
  singleBinary:
    replicas: 1
  backend:
    replicas: 0
  read:
    replicas: 0
  write:
    replicas: 0
  ingester:
    replicas: 0
  querier:
    replicas: 0
  queryFrontend:
    replicas: 0
  queryScheduler:
    replicas: 0
  distributor:
    replicas: 0
  compactor:
    replicas: 0
  indexGateway:
    replicas: 0
  bloomCompactor:
    replicas: 0
  bloomGateway:
    replicas: 0

grafana:
  enabled: true
  service:
    port: 8080
  persistence:
    enabled: true
    size: 20Gi
  httpRoute:
    enabled: true
    hostnames:
      - grafana.dev.tradecrit.com
    parentRefs:
      - name: istio-gateway
        kind: Gateway
        namespace: istio-ingress
        sectionName: https-wildcard
    matches:
      - path:
          type: PathPrefix
          value: /
    filters: []
    backendRefs:
      - name: grafana
        namespace: monitoring
        kind: Service
        port: 8080
  admin:
    existingSecret: "grafana-admin-credentials"
    userKey: admin-user
    passwordKey: admin-password
  extraObjects:
    - apiVersion: secrets.infisical.com/v1alpha1
      kind: InfisicalSecret
      metadata:
        name: grafana-admin-credentials
        namespace: monitoring
      spec:
        hostAPI: https://app.infisical.com/api
        resyncInterval: 10
        authentication:
          universalAuth:
            secretsScope:
              projectSlug: development-ko-nv
              envSlug: dev
              secretsPath: "/grafana"
              recursive: true
            credentialsRef:
              secretName: universal-auth-credentials
              secretNamespace: infisical
        managedSecretReference:
          secretName: grafana-admin-credentials
          secretNamespace: monitoring
          creationPolicy: "Owner" ## Owner | Orphan
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Loki
        type: loki
        access: proxy
        uid: loki
        url: http://grafana-loki:3100
#      jsonData:
#        derivedFields:
#          - datasourceUid: tempo
#            matcherRegex: "^.*?traceI[d|D]=(\\w+).*$"
#            name: traceId
#            url: '$${__value.raw}'
#    - name: Tempo
#      type: tempo
#      access: proxy
#      uid: tempo
#      url: http://tempo:3200
#      jsonData:
#        nodeGraph:
#          enabled: true
#        serviceMap:
#          datasourceUid: 'Mimir'
#        tracesToLogs:
#          datasourceUid: loki
#          filterByTraceID: false
#          spanEndTimeShift: "500ms"
#          spanStartTimeShift: "-500ms"
#    - name: Mimir
#      type: prometheus
#      access: proxy
#      uid: mimir
#      url: http://mimir:9009/prometheus
#      jsonData:
#        exemplarTraceIdDestinations:
#          - datasourceUid: tempo
#            name: traceID
#        httpMethod: POST
#        timeInterval: "2s"
#    - name: Pyroscope
#      type: phlare
#      access: proxy
#      uid: pyroscope
#      url: http://pyroscope:4040
#      jsonData:
#        backendType: pyroscope
