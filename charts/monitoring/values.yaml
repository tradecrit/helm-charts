mimir:
  enabled: false
  minio:
    enabled: false
  alertmanager:
    resources:
      requests:
        cpu: 20m
  compactor:
    resources:
      requests:
        cpu: 20m
  distributor:
    resources:
      requests:
        cpu: 20m
  ingester:
    replicas: 1
    zoneAwareReplication:
      enabled: false
    resources:
      requests:
        cpu: 20m
  overrides_exporter:
    resources:
      requests:
        cpu: 20m
  querier:
    replicas: 1
    resources:
      requests:
        cpu: 20m
  query_frontend:
    resources:
      requests:
        cpu: 20m
  query_scheduler:
    replicas: 1
    resources:
      requests:
        cpu: 20m
  ruler:
    resources:
      requests:
        cpu: 20m
  store_gateway:
    zoneAwareReplication:
      enabled: false
    resources:
      requests:
        cpu: 20m
  rollout_operator:
    resources:
      requests:
        cpu: 20m


loki:
  enabled: true



tempo:
  enabled: false
#  minio:
#    enabled: false
#  ingester:
#    replicas: 1
#    resources:
#      requests:
#        cpu: 20m
#  storage:
#    trace:
#      backend: s3
#      s3:
#        endpoint: <existing-minio-endpoint>
#        bucket: <existing-bucket-name>
#        access_key: <minio-access-key>
#        secret_key: <minio-secret-key>
#        insecure: true



grafana:
  enabled: false
  serviceMonitor:
    enabled: true
  service:
    port: 8080
  persistence:
    enabled: true
    size: 8Gi
  httpRoute:
    enabled: true
    hostnames:
      - grafana.dev.tradecrit.com
    parentRefs:
      - name: istio-gateway
        kind: Gateway
        namespace: istio-ingress
        sectionName: https-wildcard
    matches:
      - path:
          type: PathPrefix
          value: /
    filters: [ ]
    backendRefs:
      - name: grafana
        namespace: monitoring
        kind: Service
        port: 8080
  admin:
    existingSecret: "grafana-admin-credentials"
    userKey: admin-user
    passwordKey: admin-password
  extraObjects:
    - apiVersion: secrets.infisical.com/v1alpha1
      kind: InfisicalSecret
      metadata:
        name: grafana-admin-credentials
        namespace: monitoring
      spec:
        hostAPI: https://app.infisical.com/api
        resyncInterval: 10
        authentication:
          universalAuth:
            secretsScope:
              projectSlug: development-ko-nv
              envSlug: dev
              secretsPath: "/grafana"
              recursive: true
            credentialsRef:
              secretName: universal-auth-credentials
              secretNamespace: infisical
        managedSecretReference:
          secretName: grafana-admin-credentials
          secretNamespace: monitoring
          creationPolicy: "Owner" ## Owner | Orphan
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Loki
          type: loki
          access: proxy
          uid: loki
          url: http://grafana-loki:3100
